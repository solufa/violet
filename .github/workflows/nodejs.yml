name: Node.js CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  HUSKY: '0'

jobs:
  cache-pnpm:
    name: Cache Pnpm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v2
        with:
          version: 7
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --prefer-offline]
  check:
    needs: [cache-pnpm]
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v2
        with:
          version: 7
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --prefer-offline]
      # https://github.com/prisma/prisma/issues/4267
      - run: |
          pnpm --dir=./pkg/api run prisma:format
          git diff --exit-code --quiet -- ./pkg/api/prisma/schema.prisma
      - run: pnpm run lint
      - run: pnpm run typecheck
      - run: pnpm run build-all
  test:
    needs: [cache-pnpm, check]
    name: Test
    runs-on: ubuntu-latest
    env:
      API_PORT: 8080
      API_ORIGIN: http://localhost:8080
      API_BASE_PATH: /api
    steps:
      - uses: actions/checkout@v2
      - name: setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: pnpm/action-setup@v2
        with:
          version: 7
          run_install: |
            - recursive: true
              args: [--frozen-lockfile, --prefer-offline]
      - run: |
          sudo systemctl start mysql.service
          echo "DATABASE_URL=mysql://root:root@localhost:3306/test" > pkg/api/prisma/.env
      - run: pnpm run build-all
      - run: pnpm run test
      - run: cp ./.env.example ./.env
      - run: docker-compose up -d --build minio lambda mc
      - run: pnpm run build
      - run: pnpm run test:ci:conv2img -- -j 4
